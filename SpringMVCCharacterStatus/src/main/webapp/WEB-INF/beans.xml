<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

<!-- Scans for Spring @s -->
<context:component-scan base-package="com.mikesimagination"></context:component-scan>

<!-- Turn on MVC @s like @Controller, @RequestMapping -->
<mvc:annotation-driven></mvc:annotation-driven>

<!-- Tell Spring we are using a transactionManager and to scan for the @s of it - 
		@Transactional -->
<tx:annotation-driven/>

<!-- Tell DispatcherServlet the location of our static location content -->
<mvc:resources location="/static/" mapping="/static/**"></mvc:resources>

<bean id="myDataSource" name="myDataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="characterStatus_db"></property>
		<property name="password" value="p4ssw0rd"></property>
	</bean>
	
	
		<!-- Now give that DataSource object to SessionFactory -->
	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- Inject the DataSource bean -->
		<property name="dataSource" ref="myDataSource"></property>

		<!-- Now supply the rest of the Hibernate Properties -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>

		</property>


		<!-- scans for JPA - java persistence API -->
		<property name="packagesToScan" value="com.mikesimagination.characters"></property>
	</bean>
	
	<!-- create a transaction manager and give the sessionfactory -->
<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	<property name="sessionFactory" ref="mySessionFactory"></property>
</bean>
</beans>
